#server.port=8081
#JSP Confing
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
#END


#JDBC Config Local
#spring.datasource.url = jdbc:mysql://localhost/ITCPics?useSSL=false&useUnicode=true&characterEncoding=utf-8
#spring.datasource.username = root
#spring.datasource.password = 2HuJR0$9

#JDBC Config Live

spring.cloud.gcp.credentials.location=./WEB-INF/itlpics-763936d5cc5a.json
spring.cloud.gcp.project-id=<projectID>
spring.cloud.gcp.sql.instance-connection-name=<connectionName>
spring.cloud.gcp.sql.database-name=<dataBaseName>
spring.datasource.username=root
spring.datasource.password =<password>


# Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#The above line is not working in App engine

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

# Show or not log for each sql query
spring.jpa.show-sql = true

spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#END



# Number of ms to wait before throwing an exception if no connection is available.
spring.datasource.tomcat.max-wait=10000

# Maximum number of active connections that can be allocated from this pool at the same time.
spring.datasource.tomcat.max-active=50

spring.datasource.tomcat.max-idle=20
spring.datasource.tomcat.min-idle=15

# Validate the connection before borrowing it from the pool.
spring.datasource.tomcat.test-on-borrow=true
